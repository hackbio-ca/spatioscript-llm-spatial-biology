services:
  neo4j:
    # image: neo4j:5.22 # latest stable 5.x version, adjust as needed
    image: neo4j:latest
    container_name: neo4j
    # restart: unless-stopped
    ports:
      - "7474:7474"   # Neo4j Browser (HTTP UI)
      - "7687:7687"   # Bolt protocol
    environment:
      - NEO4J_AUTH=neo4j/letmein  # username: neo4j, password: letmein
      - NEO4J_server_memory_heap_initial__size=2G
      - NEO4J_server_memory_heap_max__size=4G
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_PLUGINS=["apoc", "apoc-extended"] # load full APOC
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=false
      # - NEO4J_PLUGINS=["apoc"] #, "graph-data-science"]
      - NEO4J_dbms_security_auth__minimum__password__length=4
    volumes:
      - ./neo4j/data:/var/lib/neo4j/data
      - ./neo4j/import:/var/lib/neo4j/import
      - ./neo4j/plugins:/var/lib/neo4j/plugins
      - ./neo4j/logs:/var/lib/neo4j/logs

  fastapi:
    build: ./fastapi   # put your FastAPI app in ./fastapi with a Dockerfile
    container_name: fastapi
    ports:
      - "8000:8000"   # FastAPI endpoint
    volumes:
      - ./fastapi:/app 
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}   # pass through your OpenAI key
      - NEO4J_URI=bolt://neo4j:7687        # internal hostname is 'neo4j'
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=letmein
    depends_on:
      - neo4j
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
